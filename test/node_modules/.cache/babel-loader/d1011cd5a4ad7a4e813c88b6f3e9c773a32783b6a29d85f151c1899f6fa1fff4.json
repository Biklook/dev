{"ast":null,"code":"var _jsxFileName = \"/workspaces/dev/test/src/context/VesselContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Créez le contexte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VesselContext = /*#__PURE__*/createContext();\n\n// Créez le fournisseur de contexte\nexport const VesselProvider = ({\n  children\n}) => {\n  _s();\n  // État pour stocker la liste des navires\n  const [vessels, setVessels] = useState([]);\n\n  // État pour stocker les enregistrements d'opérations\n  const [records, setRecords] = useState([]);\n\n  // État pour stocker les heures d'utilisation des équipements\n  const [equipmentHours, setEquipmentHours] = useState({});\n\n  // État pour stocker les alertes de maintenance\n  const [maintenanceAlerts, setMaintenanceAlerts] = useState([]);\n\n  // Fonction pour ajouter un navire\n  const addVessel = newVessel => {\n    setVessels(prevVessels => [...prevVessels, newVessel]);\n  };\n\n  // Fonction pour ajouter un enregistrement d'opération\n  const addRecord = newRecord => {\n    setRecords(prevRecords => [...prevRecords, newRecord]);\n  };\n\n  // Fonction pour mettre à jour les heures d'utilisation des équipements\n  const updateEquipmentHours = (equipmentName, hours) => {\n    setEquipmentHours(prev => ({\n      ...prev,\n      [equipmentName]: (prev[equipmentName] || 0) + hours\n    }));\n  };\n\n  // Fonction pour ajouter une alerte de maintenance\n  const addMaintenanceAlert = alert => {\n    setMaintenanceAlerts(prevAlerts => [...prevAlerts, alert]);\n  };\n\n  // Fonction pour supprimer un enregistrement d'opération\n  const deleteRecord = id => {\n    const recordToDelete = records.find(record => record.id === id);\n    if (recordToDelete) {\n      setEquipmentHours(prev => ({\n        ...prev,\n        [recordToDelete.equipmentName]: Math.max(0, (prev[recordToDelete.equipmentName] || 0) - recordToDelete.workingHours)\n      }));\n    }\n    setRecords(prev => prev.filter(record => record.id !== id));\n  };\n\n  // Valeur du contexte (partagée entre les composants)\n  const contextValue = {\n    vessels,\n    addVessel,\n    records,\n    addRecord,\n    equipmentHours,\n    updateEquipmentHours,\n    maintenanceAlerts,\n    addMaintenanceAlert,\n    deleteRecord\n  };\n  return /*#__PURE__*/_jsxDEV(VesselContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n// Créez un hook personnalisé pour utiliser le contexte\n_s(VesselProvider, \"Xinzk9HwSBL45eMEDK2voRB/LkM=\");\n_c = VesselProvider;\nexport const useVessel = () => {\n  _s2();\n  const context = useContext(VesselContext);\n  if (!context) {\n    throw new Error('useVessel doit être utilisé dans un VesselProvider');\n  }\n  return context;\n};\n_s2(useVessel, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"VesselProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","VesselContext","VesselProvider","children","_s","vessels","setVessels","records","setRecords","equipmentHours","setEquipmentHours","maintenanceAlerts","setMaintenanceAlerts","addVessel","newVessel","prevVessels","addRecord","newRecord","prevRecords","updateEquipmentHours","equipmentName","hours","prev","addMaintenanceAlert","alert","prevAlerts","deleteRecord","id","recordToDelete","find","record","Math","max","workingHours","filter","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useVessel","_s2","context","Error","$RefreshReg$"],"sources":["/workspaces/dev/test/src/context/VesselContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// Créez le contexte\nexport const VesselContext = createContext();\n\n// Créez le fournisseur de contexte\nexport const VesselProvider = ({ children }) => {\n  // État pour stocker la liste des navires\n  const [vessels, setVessels] = useState([]);\n\n  // État pour stocker les enregistrements d'opérations\n  const [records, setRecords] = useState([]);\n\n  // État pour stocker les heures d'utilisation des équipements\n  const [equipmentHours, setEquipmentHours] = useState({});\n\n  // État pour stocker les alertes de maintenance\n  const [maintenanceAlerts, setMaintenanceAlerts] = useState([]);\n\n  // Fonction pour ajouter un navire\n  const addVessel = (newVessel) => {\n    setVessels((prevVessels) => [...prevVessels, newVessel]);\n  };\n\n  // Fonction pour ajouter un enregistrement d'opération\n  const addRecord = (newRecord) => {\n    setRecords((prevRecords) => [...prevRecords, newRecord]);\n  };\n\n  // Fonction pour mettre à jour les heures d'utilisation des équipements\n  const updateEquipmentHours = (equipmentName, hours) => {\n    setEquipmentHours((prev) => ({\n      ...prev,\n      [equipmentName]: (prev[equipmentName] || 0) + hours,\n    }));\n  };\n\n  // Fonction pour ajouter une alerte de maintenance\n  const addMaintenanceAlert = (alert) => {\n    setMaintenanceAlerts((prevAlerts) => [...prevAlerts, alert]);\n  };\n\n  // Fonction pour supprimer un enregistrement d'opération\n  const deleteRecord = (id) => {\n    const recordToDelete = records.find((record) => record.id === id);\n    if (recordToDelete) {\n      setEquipmentHours((prev) => ({\n        ...prev,\n        [recordToDelete.equipmentName]: Math.max(\n          0,\n          (prev[recordToDelete.equipmentName] || 0) - recordToDelete.workingHours\n        ),\n      }));\n    }\n    setRecords((prev) => prev.filter((record) => record.id !== id));\n  };\n\n  // Valeur du contexte (partagée entre les composants)\n  const contextValue = {\n    vessels,\n    addVessel,\n    records,\n    addRecord,\n    equipmentHours,\n    updateEquipmentHours,\n    maintenanceAlerts,\n    addMaintenanceAlert,\n    deleteRecord,\n  };\n\n  return (\n    <VesselContext.Provider value={contextValue}>\n      {children}\n    </VesselContext.Provider>\n  );\n};\n\n// Créez un hook personnalisé pour utiliser le contexte\nexport const useVessel = () => {\n  const context = useContext(VesselContext);\n  if (!context) {\n    throw new Error('useVessel doit être utilisé dans un VesselProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}