{"ast":null,"code":"var _jsxFileName = \"/workspaces/dev/test/src/context/VesselContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Créez le contexte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VesselContext = /*#__PURE__*/createContext();\n\n// Créez le fournisseur de contexte\nexport const VesselProvider = ({\n  children\n}) => {\n  _s();\n  // État pour stocker la liste des navires\n  const [vessels, setVessels] = useState([]);\n\n  // Fonction pour ajouter un navire\n  const addVessel = newVessel => {\n    setVessels(prevVessels => [...prevVessels, newVessel]);\n  };\n\n  // Valeur du contexte (partagée entre les composants)\n  const contextValue = {\n    vessels,\n    // Liste des navires\n    addVessel // Fonction pour ajouter un navire\n  };\n  return /*#__PURE__*/_jsxDEV(VesselContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n// Créez un hook personnalisé pour utiliser le contexte\n_s(VesselProvider, \"k4Yq+iBNEoBWM1GIAKdZDm/ff48=\");\n_c = VesselProvider;\nexport const useVessel = () => {\n  _s2();\n  const context = useContext(VesselContext);\n  if (!context) {\n    throw new Error('useVessel doit être utilisé dans un VesselProvider');\n  }\n  return context;\n};\n_s2(useVessel, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"VesselProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","VesselContext","VesselProvider","children","_s","vessels","setVessels","addVessel","newVessel","prevVessels","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useVessel","_s2","context","Error","$RefreshReg$"],"sources":["/workspaces/dev/test/src/context/VesselContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// Créez le contexte\nexport const VesselContext = createContext();\n\n// Créez le fournisseur de contexte\nexport const VesselProvider = ({ children }) => {\n  // État pour stocker la liste des navires\n  const [vessels, setVessels] = useState([]);\n\n  // Fonction pour ajouter un navire\n  const addVessel = (newVessel) => {\n    setVessels((prevVessels) => [...prevVessels, newVessel]);\n  };\n\n  // Valeur du contexte (partagée entre les composants)\n  const contextValue = {\n    vessels, // Liste des navires\n    addVessel, // Fonction pour ajouter un navire\n  };\n\n  return (\n    <VesselContext.Provider value={contextValue}>\n      {children}\n    </VesselContext.Provider>\n  );\n};\n\n// Créez un hook personnalisé pour utiliser le contexte\nexport const useVessel = () => {\n  const context = useContext(VesselContext);\n  if (!context) {\n    throw new Error('useVessel doit être utilisé dans un VesselProvider');\n  }\n  return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;;AAE5C;AACA,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMU,SAAS,GAAIC,SAAS,IAAK;IAC/BF,UAAU,CAAEG,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAED,SAAS,CAAC,CAAC;EAC1D,CAAC;;EAED;EACA,MAAME,YAAY,GAAG;IACnBL,OAAO;IAAE;IACTE,SAAS,CAAE;EACb,CAAC;EAED,oBACEP,OAAA,CAACC,aAAa,CAACU,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAP,QAAA,EACzCA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;;AAED;AAAAZ,EAAA,CAtBaF,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAuB3B,OAAO,MAAMgB,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,MAAMC,OAAO,GAAGtB,UAAU,CAACG,aAAa,CAAC;EACzC,IAAI,CAACmB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,SAAS;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}